//Structural 
module parallel_adder(sum,carry,a,b,c); 
 input[3:0]a,b; 
 input c; 
 output [3:0]sum; 
 output carry; 
 wire c1,c2,c3; 
 full_adder FA1(sum[0],c1,a[0],b[0],c); 
 full_adder FA2(sum[1],c2,a[1],b[1],c1); 
 full_adder FA3(sum[2],c3,a[2],b[2],c2); 
 full_adder FA4(sum[3],carry,a[3],b[3],c3); 
endmodule 


//Data flow 
module parallel_adder_df(sum,carry,a,b,c); 
 input[3:0]a,b; 
 input c; 
 output [3:0]sum; 
 output carry; 
 assign {carry,sum}=a+b+c; 
endmodule 


//Behavioral 
module parallel_adder_b(sum,carry,a,b,c); 
 input[3:0]a,b; 
 input c; 
 output reg [3:0]sum; 
 output reg carry; 
 reg [4:0] temp; 
 always@(a or b or c) 
 begin 
 temp=a+b+c; 
 sum=temp[3:0]; 
 carry=temp[4]; 
 end 
endmodule 

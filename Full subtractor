//Structural 
module full_subtractor(diff, bor, A, B,C); 
 input A, B, C; 
 output diff, bor; 
 wire D1, B1, B2; 
 half_subtractor HS1(D1, B1, A, B); 
 half_subtractor HS2(diff, B2, D1, C); 
 or (bor, B1, B2); 
endmodule 


//Data flow 
module full_subtractor_df(diff,bor, A, B, C); 
 input A, B,C; 
 output diff,bor; 
 assign diff = A ^ B ^ C; // Difference 
 assign bor= (~A & B) | ((~A | B) & C); // Borrow 
endmodule 


//Behavioral 
module full_subtractor_b(diff, bor, A, B,C ); 
 input A, B,C; 
 output reg diff,bor; 
 always @(A or B or C) 
 begin 
 diff = A ^ B ^ C; 
 bor = (~A & B) | ((~A | B) & C); 
 end 
endmodule 
